/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as appEventsIndexImport } from './routes/(app)/events/index'
import { Route as appEventsCreateImport } from './routes/(app)/events/create'
import { Route as appEventsEventIdImport } from './routes/(app)/events/$eventId'
import { Route as appEventsEventIdForumImport } from './routes/(app)/events/$eventId_.forum'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const appEventsIndexRoute = appEventsIndexImport.update({
  id: '/(app)/events/',
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any)

const appEventsCreateRoute = appEventsCreateImport.update({
  id: '/(app)/events/create',
  path: '/events/create',
  getParentRoute: () => rootRoute,
} as any)

const appEventsEventIdRoute = appEventsEventIdImport.update({
  id: '/(app)/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

const appEventsEventIdForumRoute = appEventsEventIdForumImport.update({
  id: '/(app)/events/$eventId_/forum',
  path: '/events/$eventId/forum',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/(app)/events/$eventId': {
      id: '/(app)/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof appEventsEventIdImport
      parentRoute: typeof rootRoute
    }
    '/(app)/events/create': {
      id: '/(app)/events/create'
      path: '/events/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof appEventsCreateImport
      parentRoute: typeof rootRoute
    }
    '/(app)/events/': {
      id: '/(app)/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof appEventsIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/events/$eventId_/forum': {
      id: '/(app)/events/$eventId_/forum'
      path: '/events/$eventId/forum'
      fullPath: '/events/$eventId/forum'
      preLoaderRoute: typeof appEventsEventIdForumImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/events/$eventId': typeof appEventsEventIdRoute
  '/events/create': typeof appEventsCreateRoute
  '/events': typeof appEventsIndexRoute
  '/events/$eventId/forum': typeof appEventsEventIdForumRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/events/$eventId': typeof appEventsEventIdRoute
  '/events/create': typeof appEventsCreateRoute
  '/events': typeof appEventsIndexRoute
  '/events/$eventId/forum': typeof appEventsEventIdForumRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(app)/events/$eventId': typeof appEventsEventIdRoute
  '/(app)/events/create': typeof appEventsCreateRoute
  '/(app)/events/': typeof appEventsIndexRoute
  '/(app)/events/$eventId_/forum': typeof appEventsEventIdForumRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/events/$eventId'
    | '/events/create'
    | '/events'
    | '/events/$eventId/forum'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/events/$eventId'
    | '/events/create'
    | '/events'
    | '/events/$eventId/forum'
  id:
    | '__root__'
    | '/'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/(app)/events/$eventId'
    | '/(app)/events/create'
    | '/(app)/events/'
    | '/(app)/events/$eventId_/forum'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
  appEventsEventIdRoute: typeof appEventsEventIdRoute
  appEventsCreateRoute: typeof appEventsCreateRoute
  appEventsIndexRoute: typeof appEventsIndexRoute
  appEventsEventIdForumRoute: typeof appEventsEventIdForumRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
  appEventsEventIdRoute: appEventsEventIdRoute,
  appEventsCreateRoute: appEventsCreateRoute,
  appEventsIndexRoute: appEventsIndexRoute,
  appEventsEventIdForumRoute: appEventsEventIdForumRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)/login",
        "/(auth)/signup",
        "/(app)/events/$eventId",
        "/(app)/events/create",
        "/(app)/events/",
        "/(app)/events/$eventId_/forum"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.tsx"
    },
    "/(app)/events/$eventId": {
      "filePath": "(app)/events/$eventId.tsx"
    },
    "/(app)/events/create": {
      "filePath": "(app)/events/create.tsx"
    },
    "/(app)/events/": {
      "filePath": "(app)/events/index.tsx"
    },
    "/(app)/events/$eventId_/forum": {
      "filePath": "(app)/events/$eventId_.forum.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
